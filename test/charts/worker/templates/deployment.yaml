apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $.Release.Name }}
  labels:
    helm.sh/chart-name: {{ $.Chart.Name }}
    helm.sh/chart-version: {{ $.Chart.Version }}
    app.kubernetes.io/name: {{ $.Release.Name }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
  annotations:
    metadata/deployed-by: {{ $.Values.metadata.deployedBy | quote }}
    metadata/pipeline-url: {{ $.Values.metadata.pipelineUrl | quote }}
spec:
  replicas: {{ $.Values.replicas }}
  strategy: {{- toYaml $.Values.updateStrategy | nindent 4 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $.Chart.Name }}
      app.kubernetes.io/instance: {{ $.Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ $.Chart.Name }}
        app.kubernetes.io/instance: {{ $.Release.Name }}
      annotations:
        imageDigest: {{ $.Values.image.digest | quote }}
        rollMe: {{ randAlphaNum 5 | quote }}
    spec:
      {{- if $.Values.podSecurityContext.enabled }}
      securityContext: {{- omit $.Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if $.Values.image.pullSecrets }}
      imagePullSecrets: {{ toYaml $.Values.image.pullSecrets | nindent 10 }}
      {{- end }}
      terminationGracePeriodSeconds: 10
      initContainers:
        {{- range $job := $.Values.app.preRun }}
        - name: {{ $job.name }}
          image: "{{ $.Values.image.registry }}/{{ $.Values.image.repository }}:{{ $.Values.image.tag }}"
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          args:
            {{- range (split " " $job.command) }}
            - "{{ . }}"
            {{- end }}
          envFrom:
          {{- range $value := $.Values.app.externalSecrets }}
            - secretRef:
                name: {{ $value }}
          {{- end }}
          env:
            - name: COLUMNS
              value: "800"
          {{- if $job.resources }}
          resources: {{ toYaml $job.resources | nindent 12 }}
          {{- end }}
        {{- end }}
      containers:
        - name: {{ $.Chart.Name }}-app
# only for debug chart
{{/*          image: busybox*/}}
{{/*          args:*/}}
{{/*            - /bin/sh*/}}
{{/*            - -c*/}}
{{/*            - 'i=0; while true; do echo "$i: $(date)"; i=$((i+1)); sleep 300; done'*/}}
          image: "{{ $.Values.image.registry }}/{{ $.Values.image.repository }}:{{ $.Values.image.tag }}"
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          args:
            {{- range (split " " $.Values.app.command) }}
            - "{{ . }}"
            {{- end }}
          envFrom:
          {{- range $value := $.Values.app.externalSecrets }}
            - secretRef:
                name: {{ $value }}
          {{- end }}
          {{- if $.Values.resources.enabled }}
          resources: {{- omit $.Values.resources "enabled" | toYaml | nindent 12 }}
          {{- end }}
          readinessProbe:
            periodSeconds: 1
            exec:
              command:
                - cat
                - /var/lock/ready.lock

      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: {{ $.Chart.Name }}
                    app.kubernetes.io/instance: {{ $.Release.Name }}
                topologyKey: kubernetes.io/hostname
